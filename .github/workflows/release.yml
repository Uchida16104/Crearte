name: Release Crearte

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_tag.outputs.version }}
      version_nov: ${{ steps.get_tag.outputs.version_nov }}
    steps:
      - id: get_tag
        run: |
          echo "version=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          echo "version_nov=${GITHUB_REF##*/v}" >> $GITHUB_OUTPUT

  build_win:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Windows Installer
        run: |
          mkdir -p output
          curl -L -o output/crearte-installer.exe https://github.com/Uchida16104/Crearte/raw/refs/heads/main/crearte/bin/windows-amd64/bin.exe
      - name: Calculate SHA256
        id: sha
        run: echo "sha256=$(sha256sum output/crearte-installer.exe | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
      - name: Create Winget YAML
        run: |
          mkdir -p winget
          echo "Id: Uchida16104.Crearte" > winget/crearte.yaml
          echo "Name: Crearte" >> winget/crearte.yaml
          echo "Publisher: Uchida16104" >> winget/crearte.yaml
          echo "Version: ${{ needs.setup.outputs.version_nov }}" >> winget/crearte.yaml
          echo "License: MIT" >> winget/crearte.yaml
          echo "Installers:" >> winget/crearte.yaml
          echo "  - Arch: x64" >> winget/crearte.yaml
          echo "    Url: https://github.com/Uchida16104/Crearte/releases/download/${{ needs.setup.outputs.version }}/crearte-installer.exe" >> winget/crearte.yaml
          echo "    Sha256: ${{ steps.sha.outputs.sha256 }}" >> winget/crearte.yaml
          echo "InstallerType: exe" >> winget/crearte.yaml
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.version }}
          files: |
            output/crearte-installer.exe
            winget/crearte.yaml

  build_mac:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download CLI script
        run: |
          mkdir -p scripts
          curl -L -o scripts/crearte-cli.sh https://raw.githubusercontent.com/Uchida16104/Crearte/refs/heads/main/scripts/install.sh
          chmod +x scripts/crearte-cli.sh
      - name: Create tar.gz
        run: |
          mkdir -p tarbuild/crearte
          cp -r scripts tarbuild/crearte/
          tar -czf crearte.tar.gz -C tarbuild crearte
      - name: Calculate SHA256
        id: sha
        run: echo "sha256=$(shasum -a 256 crearte.tar.gz | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT
      - name: Create Formula
        run: |
          mkdir -p formula
          echo "class Crearte < Formula" > formula/crearte.rb
          echo "  desc \"Generative graphical music score tool\"" >> formula/crearte.rb
          echo "  homepage \"https://github.com/Uchida16104/Crearte\"" >> formula/crearte.rb
          echo "  url \"https://github.com/Uchida16104/Crearte/releases/download/${{ needs.setup.outputs.version }}/crearte.tar.gz\"" >> formula/crearte.rb
          echo "  sha256 \"${{ steps.sha.outputs.sha256 }}\"" >> formula/crearte.rb
          echo "  license \"MIT\"" >> formula/crearte.rb
          echo "  def install" >> formula/crearte.rb
          echo "    bin.install \"scripts/crearte-cli.sh\" => \"crearte\"" >> formula/crearte.rb
          echo "  end" >> formula/crearte.rb
          echo "end" >> formula/crearte.rb
      - name: Push to Homebrew tap
        run: |
          git clone https://x-access-token:${{ secrets.HOMEBREW_PAT }}@github.com/Uchida16104/homebrew-crearte.git taprepo
          cp formula/crearte.rb taprepo/Formula/
          cd taprepo
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add Formula/crearte.rb
          git commit -m "Update crearte.rb" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${{ secrets.HOMEBREW_PAT }}@github.com/Uchida16104/homebrew-crearte.git
          git push origin main
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.version }}
          files: crearte.tar.gz

  build_deb:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download installer
        run: |
          mkdir -p pkg/usr/local/bin
          curl -L -o pkg/usr/local/bin/crearte https://raw.githubusercontent.com/Uchida16104/Crearte/refs/heads/main/scripts/install.sh
          chmod +x pkg/usr/local/bin/crearte
      - name: Create control file
        run: |
          mkdir -p pkg/DEBIAN
          echo "Package: crearte" > pkg/DEBIAN/control
          echo "Version: ${{ needs.setup.outputs.version_nov }}" >> pkg/DEBIAN/control
          echo "Section: utils" >> pkg/DEBIAN/control
          echo "Priority: optional" >> pkg/DEBIAN/control
          echo "Architecture: amd64" >> pkg/DEBIAN/control
          echo "Maintainer: Uchida16104 <github@users.noreply.github.com>" >> pkg/DEBIAN/control
          echo "Description: Visual music score generator" >> pkg/DEBIAN/control
      - name: Build .deb
        run: dpkg-deb --build pkg crearte_${{ needs.setup.outputs.version_nov }}_amd64.deb
      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.version }}
          files: crearte_*.deb

  publish_npm:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Ensure package.json exists
        run: |
          if [ ! -f package.json ]; then
            echo '{"name":"crearte","version":"${{ needs.setup.outputs.version_nov }}","main":"index.js"}' > package.json
          fi
      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm publish --access public || echo "No valid npm package to publish. Skipping."

  finalize_release:
    needs: [build_win, build_mac, build_deb, publish_npm]
    runs-on: ubuntu-latest
    steps:
      - name: Final release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.setup.outputs.version }}
          name: "Crearte ${{ needs.setup.outputs.version }}"
          body: |
            ✅ Automated multi-platform release of Crearte:
            - 🪟 Winget Package (.exe)
            - 🍏 Homebrew Tap (Formula)
            - 🐧 Linux DEB Package
            - 📦 GitHub Packages (npm)
          draft: false
